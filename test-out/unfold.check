/*****************************************
  Emitting Generated Code                  
*******************************************/
class unfoldId extends ((Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int): scala.collection.immutable.List[Int] = {
val x1 = List(1,2,3)
var x3: scala.collection.immutable.List[Int] = x1
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x19 = while ({val x5 = x3
val x6 = x5.isEmpty
val x7 = !x6
x7}) {
val x9 = x3
val x13 = x4
val x10 = x9.head
val x14 = List(x10)
val x15 = x13 ::: x14
x4 = x15
val x11 = x9.tail
x3 = x11
()
}
val x20 = x4
x20
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(1, 2, 3)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class map extends ((Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int): scala.collection.immutable.List[Int] = {
val x1 = List(1,2,3)
var x3: scala.collection.immutable.List[Int] = x1
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x21 = while ({val x5 = x3
val x6 = x5.isEmpty
val x7 = !x6
x7}) {
val x9 = x3
val x15 = x4
val x10 = x9.head
val x13 = x10 * 2
val x16 = List(x13)
val x17 = x15 ::: x16
x4 = x17
val x11 = x9.tail
x3 = x11
()
}
val x22 = x4
x22
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(2, 4, 6)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class mapmap extends ((Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int): scala.collection.immutable.List[Int] = {
val x1 = List(1,2,3)
var x3: scala.collection.immutable.List[Int] = x1
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x23 = while ({val x5 = x3
val x6 = x5.isEmpty
val x7 = !x6
x7}) {
val x9 = x3
val x17 = x4
val x10 = x9.head
val x13 = x10 * 2
val x15 = x13 + 1
val x18 = List(x15)
val x19 = x17 ::: x18
x4 = x19
val x11 = x9.tail
x3 = x11
()
}
val x24 = x4
x24
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(3, 5, 7)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class mapmapRange extends ((Int, Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int, x1:Int): scala.collection.immutable.List[Int] = {
var x3: Int = x0
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x22 = while ({val x5 = x3
val x6 = x5 > x1
val x7 = !x6
x7}) {
val x9 = x3
val x16 = x4
val x12 = x9 * 2
val x14 = x12 + 1
val x17 = List(x14)
val x18 = x16 ::: x17
x4 = x18
val x10 = x9 + 1
x3 = x10
()
}
val x23 = x4
x23
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(3, 5, 7, 9, 11)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class filterRange extends ((Int, Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int, x1:Int): scala.collection.immutable.List[Int] = {
var x3: Int = x0
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x15 = new OptionInt(0,false)
val x27 = while ({val x5 = x3
val x6 = x5 > x1
val x7 = !x6
x7}) {
val x9 = x3
val x18 = x4
val x12 = x9 % 2
val x13 = x12 == 1
val x16 = if (x13) {
val x14 = new OptionInt(x9,true)
x14
} else {
x15
}
val x19 = x16.defined
val x23 = if (x19) {
val x20 = x16.value
val x21 = List(x20)
val x22 = x18 ::: x21
x22
} else {
x18
}
x4 = x23
val x10 = x9 + 1
x3 = x10
()
}
val x28 = x4
x28
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(1, 3, 5)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class filtermapRange extends ((Int, Int)=>(scala.collection.immutable.List[Int])) {
def apply(x0:Int, x1:Int): scala.collection.immutable.List[Int] = {
var x3: Int = x0
val x2 = List()
var x4: scala.collection.immutable.List[Int] = x2
val x15 = new OptionInt(0,false)
val x33 = while ({val x5 = x3
val x6 = x5 > x1
val x7 = !x6
x7}) {
val x9 = x3
val x24 = x4
val x12 = x9 % 2
val x13 = x12 == 1
val x16 = if (x13) {
val x14 = new OptionInt(x9,true)
x14
} else {
x15
}
val x18 = x16.defined
val x22 = if (x18) {
val x19 = x16.value
val x20 = x19 * 3
val x21 = new OptionInt(x20,true)
x21
} else {
x15
}
val x25 = x22.defined
val x29 = if (x25) {
val x26 = x22.value
val x27 = List(x26)
val x28 = x24 ::: x27
x28
} else {
x24
}
x4 = x29
val x10 = x9 + 1
x3 = x10
()
}
val x34 = x4
x34
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
List(3, 9, 15)
